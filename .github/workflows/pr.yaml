name: printer

on:
  pull_request:
    branches: [ master ]

jobs:
  junit-reporter:
    if: ${{ github.event.pull_request != null }}
    name: Display results
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: git-checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        id: junit-golang
        with:
          go-version: '>=1.18.0'

      - name: Install junit-reporter
        id: junit-tools-install
        run: go install github.com/bavix/junit-reporter@latest

      - name: Display all junit
        id: junit-display-all
        run: |
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          echo "$(~/go/bin/junit-reporter --path build/ --group --ticks --median)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Display major junit
        id: junit-display-major
        run: |
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          echo "$(~/go/bin/junit-reporter --path build/ --group --major --ticks --median)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: junit-fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Build output

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.junit-fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Build output
            All versions:
            ${{ steps.junit-display-all.outputs.stdout }}

            Major compare:
            ${{ steps.junit-display-major.outputs.stdout }}
          edit-mode: replace
